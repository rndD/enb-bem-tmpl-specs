{
  "name": "html-differ",
  "version": "1.3.1",
  "description": "Compares two HTML",
  "keywords": [
    "html-differ",
    "html-diff",
    "htmldiffer",
    "htmldiff",
    "html",
    "differ",
    "diff"
  ],
  "homepage": "https://github.com/bem/html-differ",
  "bugs": {
    "url": "https://github.com/bem/html-differ/issues"
  },
  "author": {
    "name": "Evgeniy Gavryushin",
    "email": "job.egavr@yandex.ru",
    "url": "https://github.com/eGavr"
  },
  "main": "./lib/index.js",
  "bin": {
    "html-differ": "./bin/html-differ"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bem/html-differ.git"
  },
  "dependencies": {
    "chalk": "1.0.0",
    "coa": "0.4.0",
    "diff": "1.0.8",
    "lodash": "2.4.1",
    "parse5": "1.1.3",
    "vow": "0.4.3",
    "vow-fs": "0.3.1"
  },
  "devDependencies": {
    "mocha": "1.18.2",
    "must": "0.11.0",
    "istanbul": "0.3.0",
    "jshint": "2.6.0",
    "jscs": "1.11.3"
  },
  "scripts": {
    "test": "npm run lint && npm run unit-test && npm run func-test && npm run logger-test && npm run cover",
    "lint": "jshint . && jscs -c .jscs.js .",
    "unit-test": "mocha test/unit",
    "func-test": "mocha test/differ",
    "logger-test": "mocha test/logger",
    "cover": "istanbul cover _mocha -- test/unit test/differ test/logger"
  },
  "engines": {
    "node": ">=0.8.0",
    "npm": ">=1.2.10"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "readme": "# html-differ [![Build Status](https://travis-ci.org/bem/html-differ.svg)](https://travis-ci.org/bem/html-differ) [![Coverage Status](https://img.shields.io/coveralls/bem/html-differ.svg)](https://coveralls.io/r/bem/html-differ?branch=master) [![Dependency Status](https://david-dm.org/bem/html-differ.svg)](https://david-dm.org/bem/html-differ) [![devDependency Status](https://david-dm.org/bem/html-differ/dev-status.svg)](https://david-dm.org/bem/html-differ#info=devDependencies)\n\nCompares two HTML.\n\n<!-- TOC -->\n- [The comparison algorithm](#the-comparison-algorithm)\n- [Install](#install)\n- [API](#api)\n  - [HtmlDiffer](#htmldiffer)\n    - [Options](#options)\n      - [ignoreAttributes](#ignoreattributes-array)\n      - [compareAttributesAsJSON](#compareattributesasjson-array)\n      - [ignoreWhitespaces](#ignorewhitespaces-boolean)\n      - [ignoreComments](#ignorecomments-boolean)\n      - [ignoreEndTags](#ignoreendtags-boolean)\n      - [ignoreDuplicateAttributes](#ignoreduplicateattributes-boolean)\n    - [Presets](#presets)\n      - [Usage](#usage)\n    - [Methods](#methods)\n      - [htmlDiffer.diffHtml](#htmldifferdiffhtml)\n      - [htmlDiffer.isEqual](#htmldifferisequal)\n  - [Logger](#logger)\n    - [Methods](#methods-1)\n      - [logger.getDiffText](#loggergetdifftext)\n      - [logger.logDiffText](#loggerlogdifftext)\n  - [Example](#example)\n- [Usage as a program](#usage-as-a-program)\n  - [Example](#example-1)\n  - [Configuration file](#configuration-file)\n- [Masks](#masks)\n  - [Syntax](#syntax)\n  - [Screening](#screening)\n\n<!-- TOC END -->\n\n## The comparison algorithm\n\n**html-differ** compares HTML using the following criteria:\n\n* `<!DOCTYPE>` declarations are case-insensitive, so the following two code samples will be considered to be equivalent:\n\n```html\n<!DOCTYPE HTML PUBLIC \"_PUBLIC\" \"_SYSTEM\">\n```\n\n```html\n<!doctype html public \"_PUBLIC\" \"_SYSTEM\">\n```\n\n* Whitespaces (spaces, tabs, new lines etc.) inside start and end tags are ignored during the comparison.\n\nFor example, the following two code samples will be considered to be equivalent:\n\n```html\n<span id=\"1\"></span>\n```\n\n```html\n<span id=\n    \"1\"    ></span   >\n```\n\n* Two respective lists of attributes are considered to be equivalent even if they are specified in different order.\n\nFor example, the following two code samples will be considered to be equivalent:\n\n```html\n<span id=\"blah\" class=\"ololo\" tabIndex=\"1\">Text</span>\n```\n\n```html\n<span tabIndex=\"1\" id=\"blah\" class=\"ololo\">Text</span>\n```\n\n* Two respective attributes `class` are considered to be equivalent if they refer to the same groups of CSS styles.\n\nFor example, the following two code samples will be considered to be equivalent:\n\n```html\n<span class=\"ab bc cd\">Text</span>\n```\n\n```html\n<span class=\" cd  ab bc\">Text</span>\n```\n\n**CAUTION!**<br>\n**html-differ** does not check the validity of HTML, but compares them using the above shown criteria and specified options (see the list of possible [options](https://github.com/bem/html-differ/tree/master#options)).\n\n## Install\n\n```bash\n$ npm install html-differ\n```\n\n## API\n\n### HtmlDiffer\n\n```js\nvar HtmlDiffer = require('html-differ').HtmlDiffer,\n    htmlDiffer = new HtmlDiffer(options);\n```\n\nwhere `options` is an object.\n\n#### Options\n\n<!-- TOC:display:ignoreAttributes -->\n##### ignoreAttributes: [Array]\n\nSets what kind of respective attributes' content will be ignored during the comparison (default: `[]`).\n\n**Example**: `['id', 'for']`<br>\nThe following two code samples will be considered to be equivalent:\n\n```html\n<label for=\"random\">Text</label>\n<input id=\"random\">\n```\n\n```html\n<label for=\"sfsdfksdf\">Text</label>\n<input id=\"sfsdfksdf\">\n```\n\n<!-- TOC:display:compareAttributesAsJSON -->\n##### compareAttributesAsJSON: [Array]\n\nSets what kind of respective attributes' content will be compared as JSON objects, but not as strings (default: `[]`).<br>\nIn cases when the value of the attribute is an invalid JSON or can not be wrapped into a function, it will be compared as `undefined`.\n\n**Example**: `[{ name: 'data', isFunction: false }, { name: 'onclick', isFunction: true }]`<br>\nThe following two code samples will be considered to be equivalent:\n\n```html\n<div data='{\"bla\":{\"first\":\"ololo\",\"second\":\"trololo\"}}'></div>\n<span onclick='return {\"aaa\":\"bbb\",\"bbb\":\"aaa\"}'></span>\n\n<button data='REALLY BAD JSON'></button>\n<button onclick='REALLY BAD FUNCTION'></button>\n```\n\n```html\n<div data='{\"bla\":{\"second\":\"trololo\",\"first\":\"ololo\"}}'></div>\n<span onclick='return {\"bbb\":\"aaa\",\"aaa\":\"bbb\"}'></span>\n\n<button data='undefined'></button>\n<button onclick='undefined'></button>\n```\n\n**REMARK!**<br>\nThe first element of the array could be written in a short form as string:<br>\n`['data', { name: 'onclick', isFunction: true }]`.\n\n<!-- TOC:display:ignoreWhitespaces -->\n##### ignoreWhitespaces: Boolean\n\nMakes **html-differ** ignore whitespaces (spaces, tabs, new lines etc.) during the comparison (default: `true`).\n\n**Example**: `true`<br>\nThe following two code samples will be considered to be equivalent:\n\n```html\n<html>Text Text<head lang=\"en\"><title></title></head><body>Text</body></html>\n```\n\n```html\n <html>\n Text   Text\n<head lang=\"en\">\n    <title>               </title>\n\n\n            </head>\n\n<body>\n     Text\n\n    </body>\n\n\n\n\n</html>\n\n```\n\n<!-- TOC:display:ignoreComments -->\n##### ignoreComments: Boolean\n\nMakes **html-differ** ignore HTML comments during the comparison (default: `true`).\n\n**REMARK!**<br>\nDoes not ignore [conditional comments](http://en.wikipedia.org/wiki/Conditional_comment).\n\n\n**Example**: `true`<br>\nThe following two code samples will be considered to be equivalent:\n\n```html\n<!DOCTYPE html>\n<!-- comments1 -->\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <!--[if IE]>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"all-ie-only.css\" />\n    <![endif]-->\n    <!--[if !IE]><!-->\n        <link href=\"non-ie.css\" rel=\"stylesheet\">\n    <!--<![endif]-->\n</head>\n<body>\nText<!-- comments2 -->\n</body>\n</html>\n```\n\n```html\n<!DOCTYPE html>\n\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <!--[if IE]>\n        <link href=\"all-ie-only.css\" type=\"text/css\" rel=\"stylesheet\"/>\n    <![endif]-->\n    <!--[if !IE]><!-->\n        <link href=\"non-ie.css\" rel=\"stylesheet\">\n    <!--<![endif]-->\n</head>\n<body>\nText\n</body>\n</html>\n```\n\n<!-- TOC:display:ignoreEndTags -->\n##### ignoreEndTags: Boolean\n\nMakes **html-differ** ignore end tags during the comparison (default: `false`).\n\n**Example**: `true`<br>\nThe following two code samples will be considered to be equivalent:\n\n```html\n<span>Text</span>\n```\n\n```html\n<span>Text</spane>\n```\n\n<!-- TOC:display:ignoreDuplicateAttributes -->\n##### ignoreDuplicateAttributes: Boolean\n\nMakes **html-differ** ignore tags' duplicate attributes during the comparison.<br>\nFrom the list of the same tag's attributes, the attribute which goes the first will be taken for comparison, others will be ignored (default: `false`).\n\n**Example**: `true`<br>\nFor example, the following two code samples will be considered to be equivalent:\n\n```html\n<span id=\"blah\" id=\"ololo\">Text</span>\n```\n\n```html\n<span id=\"blah\">Text</span>\n```\n\n#### Presets\n\n* [bem](https://github.com/bem/html-differ/blob/master/presets/bem.json) - sets predefined options for [BEM](http://bem.info/).\n\n\n##### Usage\n\nPassing of a preset via the constructor:\n\n```js\nvar HtmlDiffer = require('html-differ').HtmlDiffer,\n    htmlDiffer = new HtmlDiffer('bem');\n```\n\nRedefinition of a preset via the constructor:\n\n```js\nvar HtmlDiffer = require('html-differ').HtmlDiffer,\n    htmlDiffer = new HtmlDiffer({ preset: 'bem', ignoreAttributes: [] });\n```\n\n#### Methods\n\n##### htmlDiffer.diffHtml\n\n**@param** *{String}* - the 1-st HTML code<br>\n**@param** *{String}* - the 2-nd HTML code<br>\n**@returns** *{Array of objects}* - [array with diffs](https://github.com/kpdecker/jsdiff#change-objects) between HTML\n\n##### htmlDiffer.isEqual\n\n**@param** *{String}* - the 1-st HTML code<br>\n**@param** *{String}* - the 2-nd HTML code<br>\n**@returns** *{Boolean}*\n\n\n### Logger\n\n```js\nvar logger = require('html-differ/lib/logger');\n```\n\n#### Methods\n\n##### logger.getDiffText\n\n**@param** *{Array of objects}* - the result of the work of the method [htmlDiffer.diffHtml](https://github.com/bem/html-differ/tree/master#htmldifferdiffhtml)<br>\n**@param** *{Object}* - options:<br>\n\n* **charsAroundDiff: Number** - the number of characters around the diff result between two HTML (default: `40`).\n\n**@returns** *{String}*\n\n##### logger.logDiffText\n**@param** *{Array of objects}* - the result of the work of the method [htmlDiffer.diffHtml](https://github.com/bem/html-differ/tree/master#htmldifferdiffhtml)<br>\n**@param** *{Object}* - options:<br>\n\n* **charsAroundDiff: Number** - the number of characters around the diff result between two HTML (default: `40`).\n\n**@returns** - pretty logging of diffs:\n\n<img src='https://cloud.githubusercontent.com/assets/6376693/3648928/a6b9d48a-110d-11e4-8a07-d9b156145017.png'/>\n\n\n### Example\n\n```js\nvar fs = require('fs'),\n    HtmlDiffer = require('html-differ').HtmlDiffer,\n    logger = require('html-differ/lib/logger');\n\nvar html1 = fs.readFileSync('1.html', 'utf-8'),\n    html2 = fs.readFileSync('2.html', 'utf-8');\n\nvar options = {\n        ignoreAttributes: [],\n        compareAttributesAsJSON: [],\n        ignoreWhitespaces: true,\n        ignoreComments: true,\n        ignoreEndTags: false,\n        ignoreDuplicateAttributes: false\n    };\n\nvar htmlDiffer = new HtmlDiffer(options);\n\nvar diff = htmlDiffer.diffHtml(html1, html2),\n    isEqual = htmlDiffer.isEqual(html1, html2),\n    res = logger.getDiffText(diff, { charsAroundDiff: 40 });\n\nlogger.logDiffText(diff, { charsAroundDiff: 40 });\n```\n\n## Usage as a program\n\n```bash\n$ html-differ --help\nCompares two HTML\n\nUsage:\n  html-differ [OPTIONS] [ARGS]\n\nOptions:\n  -h, --help : Help\n  -v, --version : Shows the version number\n  --config=CONFIG : Path to a configuration JSON file\n  --bem : Uses predefined options for BEM (deprecated)\n  -p PRESET, --preset=PRESET : Name of a preset\n  --chars-around-diff=CHARSAROUNDDIFF : The number of characters around the diff (default: 40)\n\nArguments:\n  PATH1 : Path to the 1-st HTML file (required)\n  PATH2 : Path to the 2-nd HTML file (required)\n```\n\n### Example\n\n```bash\n$ html-differ path/to/html1 path/to/html2\n\n$ html-differ --config=path/to/config --chars-around-diff=40 path/to/html1 path/to/html2\n\n$ html-differ --preset=bem path/to/html1 path/to/html2\n```\n\n### Configuration file\n\nStudy the following file `config.json`:\n\n```js\n{\n    \"ignoreAttributes\": [],\n    \"compareAttributesAsJSON\": [],\n    \"ignoreWhitespaces\": true,\n    \"ignoreComments\": true,\n    \"ignoreEndTags\": false,\n    \"ignoreDuplicateAttributes\": false\n}\n```\n\n## Masks\n\n**html-differ** supports handling of _masks_ in HTML.\n\nFor example, the following two code samples will be considered to be equivalent:\n\n```html\n<div id=\"{{[a-z]*\\s\\d+}}\">\n```\n\n```html\n<div id=\"text 12345\">\n```\n\n### Syntax\n\n_Masks_ in **html-differ** have the following syntax:\n\n```js\n{{RegExp}}\n```\n\nwhere:\n\n* `{{` – opening identifier of the _mask_.\n\n* `RegExp` – regular expression for matching with the corresponding value in another HTML. The syntax is similar to regular expressions in JavaScript written in a literal notation.\n\n* `}}` – closing identifier of the _mask_.\n\n### Screening\n\nThe rules of screening of symbols are similar to the rules which are used in regular expressions in JavaScript written in a literal notation.\n\nFor example, the following two code samples will be considered to be equivalent:\n\n```html\n<div id=\"{{\\d\\.\\d}}\">\n```\n\n```html\n<div id=\"1.1\">\n```\n\nIf you want to use `{{` or `}}` inside a mask, you should screen both curly braces, i.e. `\\{\\}` or `\\}\\}`.\n\nFor example, the following two code samples will be considered to be equivalent:\n\n```html\n<div class=\"{{a\\{\\{b\\}\\}c}}\">\n```\n\n```html\n<div class=\"a{{b}}c\">\n```\n",
  "readmeFilename": "README.md",
  "_id": "html-differ@1.3.1",
  "_shasum": "65abefd9b8f19d3693ce7168ed21a853d083fccc",
  "_resolved": "http://registry.npmjs.org/html-differ/-/html-differ-1.3.1.tgz",
  "_from": "html-differ@1.3.1"
}
